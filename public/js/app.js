// Generated by CoffeeScript 1.7.1
(function() {
  var animate, camera, clock, container, controls, init, keyboard, render, renderer, scene, update;

  keyboard = new THREEx.KeyboardState();

  clock = new THREE.Clock();

  container = void 0;

  scene = void 0;

  camera = void 0;

  renderer = void 0;

  controls = void 0;

  init = function() {
    var ASPECT, FAR, NEAR, SCREEN_HEIGHT, SCREEN_WIDTH, VIEW_ANGLE, floor, floorGeometry, floorMaterial, light, skyBox, skyBoxGeometry, skyBoxMaterial;
    scene = new THREE.Scene();
    ENGINE.threeScene = scene;
    SCREEN_WIDTH = window.innerWidth;
    SCREEN_HEIGHT = window.innerHeight;
    VIEW_ANGLE = 45;
    ASPECT = SCREEN_WIDTH / SCREEN_HEIGHT;
    NEAR = 0.1;
    FAR = 20000;
    camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);
    ENGINE.threeCamera = camera;
    scene.add(camera);
    camera.position.set(0, 70, 0);
    camera.lookAt(scene.position);
    renderer = new THREE.WebGLRenderer({
      antialias: true
    });
    ENGINE.threeRenderer = renderer;
    renderer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);
    container = document.getElementById('ThreeJS');
    container.appendChild(renderer.domElement);
    THREEx.WindowResize(renderer, camera);
    ENGINE.Key_Manager.ks = keyboard;
    controls = new THREE.OrbitControls(camera, renderer.domElement);
    ENGINE.threeControls = controls;
    light = new THREE.PointLight(0xffffff);
    light.position.set(100, 250, 100);
    scene.add(light);
    floorMaterial = new THREE.MeshBasicMaterial({
      color: 0x0e0f1a,
      side: THREE.DoubleSide
    });
    floorGeometry = new THREE.PlaneGeometry(2000, 2000, 10, 10);
    floor = new THREE.Mesh(floorGeometry, floorMaterial);
    floor.position.y = -0.5;
    floor.rotation.x = Math.PI / 2;
    scene.add(floor);
    skyBoxGeometry = new THREE.CubeGeometry(10000, 10000, 10000);
    skyBoxMaterial = new THREE.MeshBasicMaterial({
      color: 0x222241,
      side: THREE.BackSide
    });
    skyBox = new THREE.Mesh(skyBoxGeometry, skyBoxMaterial);
    scene.add(skyBox);
    return ENGINE.Init();
  };

  animate = function() {
    var delta;
    requestAnimationFrame(animate);
    render();
    delta = clock.getDelta();
    return update(delta);
  };

  update = function(delta) {
    ENGINE.update(delta);
    return controls.update();
  };

  render = function() {
    ENGINE.render();
    return renderer.render(scene, camera);
  };

  ENGINE.base_animations = new ENGINE.Collection(ENGINE);

  ENGINE.Init = function() {
    console.log("Engine Init");
    document.addEventListener("keydown", ENGINE.Key_Manager.keydown, false);
    document.addEventListener("keyup", ENGINE.Key_Manager.keyup, false);
    return ENGINE.base_animations.add(ENGINE.Base_Animation, {
      lifespan: 2
    });
  };

  ENGINE.render = function() {
    return ENGINE.base_animations.call('render', void 0);
  };

  ENGINE.update = function(delta) {
    ENGINE.base_animations.call('step', delta);
    return ENGINE.base_animations.step();
  };

  init();

  animate();


  /*
  
  Things that need to come together and incrementally
  
  animations
  
  keyboard manager
      - associating keys/combinations of keys to actions - A
      - determining when things will happen based on key combinations
  
  
  base animations - letters spewing
      A: Creation - DONE 
  
      A: modifications
          change color
          get bigger, smaller
          flash, wireframe,
          lasts longer on the screen
  
  global animations
      A: creation
          screen flashing
          color changing
          sliding etc
  
  base sound
      A: creation
      A: modification
          change pitch
          elongate
          repeat
          flash
          stutter
  
   * it should consider tweeting it out
   */

}).call(this);
